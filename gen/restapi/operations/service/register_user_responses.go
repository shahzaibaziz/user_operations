// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/shahzaibaziz/user_operations/gen/models"
)

// RegisterUserCreatedCode is the HTTP code returned for type RegisterUserCreated
const RegisterUserCreatedCode int = 201

/*RegisterUserCreated successfully save user object into database

swagger:response registerUserCreated
*/
type RegisterUserCreated struct {

	/*
	  In: Body
	*/
	Payload *models.UserResponse `json:"body,omitempty"`
}

// NewRegisterUserCreated creates RegisterUserCreated with default headers values
func NewRegisterUserCreated() *RegisterUserCreated {

	return &RegisterUserCreated{}
}

// WithPayload adds the payload to the register user created response
func (o *RegisterUserCreated) WithPayload(payload *models.UserResponse) *RegisterUserCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register user created response
func (o *RegisterUserCreated) SetPayload(payload *models.UserResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterUserCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterUserUnauthorizedCode is the HTTP code returned for type RegisterUserUnauthorized
const RegisterUserUnauthorizedCode int = 401

/*RegisterUserUnauthorized Unauthorized

swagger:response registerUserUnauthorized
*/
type RegisterUserUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterUserUnauthorized creates RegisterUserUnauthorized with default headers values
func NewRegisterUserUnauthorized() *RegisterUserUnauthorized {

	return &RegisterUserUnauthorized{}
}

// WithPayload adds the payload to the register user unauthorized response
func (o *RegisterUserUnauthorized) WithPayload(payload *models.Error) *RegisterUserUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register user unauthorized response
func (o *RegisterUserUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterUserConflictCode is the HTTP code returned for type RegisterUserConflict
const RegisterUserConflictCode int = 409

/*RegisterUserConflict Conflict

swagger:response registerUserConflict
*/
type RegisterUserConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterUserConflict creates RegisterUserConflict with default headers values
func NewRegisterUserConflict() *RegisterUserConflict {

	return &RegisterUserConflict{}
}

// WithPayload adds the payload to the register user conflict response
func (o *RegisterUserConflict) WithPayload(payload *models.Error) *RegisterUserConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register user conflict response
func (o *RegisterUserConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterUserConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RegisterUserDefault Internal Server Error

swagger:response registerUserDefault
*/
type RegisterUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterUserDefault creates RegisterUserDefault with default headers values
func NewRegisterUserDefault(code int) *RegisterUserDefault {
	if code <= 0 {
		code = 500
	}

	return &RegisterUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the register user default response
func (o *RegisterUserDefault) WithStatusCode(code int) *RegisterUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the register user default response
func (o *RegisterUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the register user default response
func (o *RegisterUserDefault) WithPayload(payload *models.Error) *RegisterUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register user default response
func (o *RegisterUserDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
